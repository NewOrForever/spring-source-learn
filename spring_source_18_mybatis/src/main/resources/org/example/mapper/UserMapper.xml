<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.UserMapper">

<!--    <cache-ref namespace=""/>-->

    <cache></cache>
    <!-- Mybatis 是如何将 sql 执行结果封装为目标对象并返回的？都有哪些映射形式？-->
    <resultMap id="userResult" type="org.example.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="update_time"/>
        <!--<collection property="" select=""-->

    </resultMap>




    <select id="selectById" resultMap="userResult"  >
        select * from users
        <where>
            <if test="id > 0">
                and id=#{id}
            </if>
        </where>
    </select>


    <!--
      动态sql数据源  需要在调用crud 解析sql
      静态sql数据源        解析CURD节点的就会把sql解析好

      1  select id,user_name,create_time from t_user where id=1   动态

      2  select id,user_name,create_time from t_user where id= ?   静态

      3  select id,user_name,create_time from t_user
      <where>
         <if test="id>0">
         and id=${id}
         </if>
      </where>
      动态
    -->
</mapper>
