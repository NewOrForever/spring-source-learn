spring:
  shardingsphere:
    datasource:
      names: order_db_1, order_db_2, main_db # 定义数据源名称
      order_db_1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3305/order_db_1?serverTimezone=Asia/Singapore&useSSL=false # 替换为您的数据库连接信息
        username: root
        password: root
      order_db_2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_db_2?serverTimezone=Asia/Singapore&useSSL=false # 替换为您的数据库连接信息
        username: root
        password: root
      main_db: # 用于存储 user, product, cart 等非分表
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/main_db?serverTimezone=Asia/Singapore&useSSL=false # 替换为您的数据库连接信息
        username: root
        password: root
    rules:
      sharding:
        default-database-strategy:
          none: # 没有默认的数据库分片策略
        default-table-strategy:
          none: # 没有默认的表分片策略
        tables:
          t_order: # 逻辑表名
            actual-data-nodes: order_db_${1..2}.t_order_${1..2} # 配置实际的数据节点
            database-strategy:
              standard:
                sharding-column: user_id # 数据库分片键
                sharding-algorithm-name: orderDatabaseShardingAlgorithm # 数据库分片算法名称
            table-strategy:
              standard:
                sharding-column: user_id # 表分片键
                sharding-algorithm-name: orderTableShardingAlgorithm # 表分片算法名称

        sharding-algorithms:
          orderDatabaseShardingAlgorithm: # 数据库分片算法
            type: INLINE
            props:
              algorithm-expression: order_db_${(user_id % 4).intdiv(2) + 1}
          orderTableShardingAlgorithm: # 表分片算法
            type: INLINE
            props:
              algorithm-expression: t_order_${(user_id % 4) % 2 + 1}
        key-generator:
          order_id_generator: # 主键生成器
            type: SNOWFLAKE
      props:
        sql-show: true # 是否在控制台打印执行的 SQL


# sql 日志打印
logging:
  level:
    org.apache.shardingsphere: DEBUG
    org.mybatis: DEBUG
    com.example: DEBUG


